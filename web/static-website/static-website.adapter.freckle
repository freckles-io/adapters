doc:
  author: Markus Binsteiner
  homepage: https://docs.freckles.io/en/latest/adapters/static-website.html
  short_help: installs and configures a webserver to serve a static website
  help: |
    Installs and configures a webserver to publish a static website.

    'nginx' is used as the webserver, 'apache' might be supported as an option later. If you set the 'letsencrypt_email' variable this adapter will request a https certificate for the domain set in 'static_website_domain', as well as a cron job to renew it before it runs out. So, for this to work you'll obviously need to have configured dns correctly for the server this is running on.

    Supported:
      - for now, only Debian Stretch is supported

__freckles__:
  roles:
    - geerlingguy.nginx
    - thefinn93.letsencrypt

args:
  static_website_port:
    alias: port
    default: 80
    doc:
      help: "the port the webserver should listen on"
    click:
      option:
        show_default: true
        type: int
        metavar: PORT
  static_website_domain:
    alias: domain
    type: str
    required: false
    default: 127.0.0.1
    doc:
      help: "the domain the static website is hosted on"
    click:
      option:
        show_default: true
  letsencrypt_email:
    alias: email
    required: false
    default: false
    doc:
      help: "the email address to use when requesting a https certificate from the 'letsencrypt'-project, defaults to 'none'. if no email address is specified, no https cert will be requested and https won't be setup. Otherwise the static_website_port will be forwarded to the https port (443)."

tasks:

  - name: "[enabling letsencrypt]"
    set_fact:
      request_https_cert: true
      static_website_port_new: 443
    when: "letsencrypt_email is defined and (letsencrypt_email == True or letsencrypt_email not in ['false', 'False', 'no', 'No', 'none', 'None'])"

  - name: "[disabling letsencrypt]"
    set_fact:
      request_https_cert: false
      static_website_port_new: "{{ static_website_port }}"
    when: "letsencrypt_email is not defined or letsencrypt_email == False or letsencrypt_email in ['false', 'False', 'no', 'No', 'none', 'None']"

  - name: "[setting https related stuff]"
    set_fact:
      web_server_letsencrypt_email: "{{ letsencrypt_email | mandatory }}"
      letsencrypt_cert_domains:
        - "{{ static_website_domain | mandatory }}"
    when: request_https_cert

  - name: "managing https certificate for {{ static_website_domain }}"
    include_role:
      name: thefinn93.letsencrypt
    vars:
      letsencrypt_webroot_path: "{{ freckle_path }}"
      letsencrypt_renewal_command_args: '--renew-hook "systemctl restart nginx"'
    when: request_https_cert

  - name: "[setting https related stuff]"
    set_fact:
      nginx_https_options_1: "ssl http2"
      nginx_https_options_2: |
        ssl_certificate      /etc/letsencrypt/live/{{ static_website_domain }}/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/{{ static_website_domain }}/privkey.pem;
        ssl_trusted_certificate   /etc/letsencrypt/live/{{ static_website_domain }}/fullchain.pem;
        ssl_protocols        TLSv1.1 TLSv1.2;
        ssl_ciphers          HIGH:!aNULL:!MD5;
    when: request_https_cert

  - name: "[setting variables for non-https deployment]"
    set_fact:
      nginx_https_options_1: ""
      nginx_https_options_2: ""
    when: not request_https_cert

  - name: adding http -> https redirect
    set_fact:
      nginx_vhost_http:
        - listen: "{{ static_website_port }}"
          server_name: "{{ static_website_domain }}"
          return: "301 https://{{ static_website_domain }}$request_uri"
          filename: "{{ static_website_domain }}.80.conf"
    when: request_https_cert

  # webserver
  - name: "[setting webserver vars]"
    set_fact:
      nginx_remove_default_vhost: true
      nginx_vhosts:
        - listen: "{{ static_website_port_new }} {{ nginx_https_options_1 }}"
          server_name: "{{ static_website_domain }}"
          root: "{{ freckle_path }}"
          filename: "{{ freckle_folder_name }}.{{ static_website_port_new }}.conf"
          extra_parameters: |
            {{ nginx_https_options_2 }}

  - name: "[adding http -> https redirect if necessary]"
    set_fact:
      nginx_vhosts: "{{ nginx_vhost_http }} + {{ nginx_vhosts }}"
    when: request_https_cert

  - name: installing and configuring nginx
    import_role:
      name: geerlingguy.nginx
    vars:
      nginx_user: "{{ freckle_owner }}"
    become: true
